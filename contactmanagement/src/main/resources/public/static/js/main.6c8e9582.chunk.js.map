{"version":3,"sources":["App.js","reportWebVitals.js","services/ContactService.js","components/CreateContact.js","components/Contacts.js","components/DisplayContacts.js","index.js"],"names":["App","className","to","style","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAllContacts","a","fetch","response","json","createContact","data","method","headers","body","JSON","stringify","CreateContact","state","contact","firstName","lastName","email","e","validateInput","console","log","setState","onChangeForm","target","name","value","error","this","validateText","validateEmail","alert","txt","match","test","String","toLowerCase","Button","variant","href","for","type","onChange","id","placeholder","onClick","Component","Contacts","contacts","contactTable","map","index","ContactRow","DisplayContacts","status","length","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.6c8e9582.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"container pt-3\">\n      <h1>Contacts Management</h1>\n      <Link className=\"btn btn-outline-secondary btn-lg\" to= \"/create\" style={{margin: \"10px\"}}>Add contact</Link>\n      <Link className=\"btn btn-outline-secondary btn-lg\" to= \"/contacts\" style={{margin: \"10px\"}}>View contacts</Link>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export async function getAllContacts() {\r\n\r\n    const response = await fetch(`/api/contacts`);\r\n    return await response.json();\r\n}\r\n\r\nexport async function createContact(data) {\r\n    const response = await fetch(`/api/contacts`, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n      })\r\n    return await response.json();\r\n}","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { createContact } from '../services/ContactService'\r\n\r\nclass CreateContact extends Component {\r\n    \r\n    state = {\r\n        contact: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    createContact = (e) => {\r\n        if(this.validateInput()) {\r\n            createContact(this.state.contact)\r\n                .then(response => {\r\n                    console.log(response);\r\n            });\r\n            this.setState({contact: {}});\r\n        }\r\n    }\r\n\r\n    validateInput(){\r\n        let error = \"\";\r\n        let contact = this.state.contact\r\n        if(contact.firstName===\"\" || !this.validateText(contact.firstName)){\r\n            error += \"The First name is not valid\\n\";\r\n        }\r\n        if(contact.lastName===\"\" || !this.validateText(contact.lastName)){\r\n            error += \"The Last name is not valid\\n\";\r\n        }\r\n        if(contact.email===\"\" || !this.validateEmail(contact.email)){\r\n            error += \"The Email is not valid\\n\";\r\n        }\r\n        if(error!==\"\"){\r\n            alert(error);\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    validateText(txt){\r\n        let validText = /^[A-Za-z\\s]+$/;\r\n        if(txt.match(validText)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    onChangeForm = (e) => {\r\n        let contact = this.state.contact\r\n        if (e.target.name === 'firstname') {\r\n            contact.firstName = e.target.value;\r\n        } else if (e.target.name === 'lastname') {\r\n            contact.lastName = e.target.value;\r\n        } else if (e.target.name === 'email') {\r\n            contact.email = e.target.value;\r\n        }\r\n        this.setState({contact})\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container pt-3\">\r\n                <Button variant=\"outline-primary\" href=\"/\">Home</Button>\r\n                <h1>Add contact below</h1>\r\n                <div>\r\n                    <form>\r\n                        <div className=\"container p-3 my-3 border bg-light text-dark\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label for=\"firstName\"><h5>First Name</h5></label>\r\n                                <br />\r\n                                <input type=\"text\" onChange={(e) => this.onChangeForm(e)} className=\"form-control\" name=\"firstname\" id=\"firstname\" placeholder=\"First Name\" />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container p-3 my-3 border bg-light text-dark\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label for=\"lastName\"><h5>Last Name</h5></label>\r\n                                <br />\r\n                                <input type=\"text\" onChange={(e) => this.onChangeForm(e)} className=\"form-control\" name=\"lastname\" id=\"lastname\" placeholder=\"Last Name\" />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container p-3 my-3 border bg-light text-dark\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label for=\"email\"><h5>Email</h5></label>\r\n                                <br />\r\n                                <input type=\"text\" onChange={(e) => this.onChangeForm(e)} className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" onClick= {(e) => this.createContact(e)} className=\"btn btn-success\">Create</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateContact","import React from 'react'\r\n\r\nexport const Contacts = ({contacts}) => {\r\n\r\n\r\n    const ContactRow = (contact,index) => {\r\n\r\n        return(\r\n              <tr key = {index} className={index%2 === 0?'odd':'even'}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{contact.firstName}</td>\r\n                  <td>{contact.lastName}</td>\r\n                  <td>{contact.email}</td>\r\n              </tr>\r\n          )\r\n    }\r\n\r\n    const contactTable = contacts.map((contact,index) => ContactRow(contact,index))\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h2>Contacts</h2>\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Entry</th>\r\n                    <th>Firstname</th>\r\n                    <th>Lastname</th>\r\n                    <th>Email</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contactTable}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getAllContacts } from '../services/ContactService';\r\nimport { Contacts } from './Contacts';\r\n\r\nclass DisplayContacts extends Component {\r\n    \r\n\r\n    state = {\r\n        contacts: []\r\n      }\r\n\r\n     getAllContacts = () => {\r\n        getAllContacts()\r\n          .then(contacts => {\r\n            console.log(contacts)\r\n            this.setState({contacts: contacts})\r\n          });\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.getAllContacts();\r\n      }\r\n\r\n      render() {\r\n        const status = this.state.contacts.length === 0 ? <h1>There are no registered contacts</h1> : <Contacts contacts={this.state.contacts}></Contacts>;\r\n        return(\r\n            <div className=\"container pt-3\">\r\n                <Button variant=\"outline-primary\" href=\"/\">Home</Button>\r\n                {status}\r\n            </div>\r\n            \r\n        )\r\n      }\r\n    \r\n}\r\n\r\nexport default DisplayContacts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Route, BrowserRouter, Routes} from 'react-router-dom';\nimport CreateContact from './components/CreateContact';\nimport DisplayContacts from './components/DisplayContacts';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"/create\" element={<CreateContact />} />\n      <Route path=\"/contacts\" element={<DisplayContacts />} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}